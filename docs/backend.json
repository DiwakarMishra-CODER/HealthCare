{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the HealthNest application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "dateOfBirth": {
          "type": "string",
          "description": "Date of birth of the user.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email"
      ]
    },
    "MedicalRecord": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MedicalRecord",
      "type": "object",
      "description": "Represents a medical record associated with a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the medical record."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who owns this medical record. (Relationship: User 1:N MedicalRecord)"
        },
        "recordName": {
          "type": "string",
          "description": "Name or title of the medical record."
        },
        "fileUrl": {
          "type": "string",
          "description": "URL where the medical record file is stored."
        },
        "uploadDate": {
          "type": "string",
          "description": "Date and time when the medical record was uploaded.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "recordName",
        "fileUrl",
        "uploadDate"
      ]
    },
    "MedicineReminder": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MedicineReminder",
      "type": "object",
      "description": "Represents a reminder for a user to take a specific medicine.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the medicine reminder."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who set this reminder. (Relationship: User 1:N MedicineReminder)"
        },
        "medicineName": {
          "type": "string",
          "description": "Name of the medicine."
        },
        "dosage": {
          "type": "string",
          "description": "Dosage of the medicine (e.g., '1 tablet', '5ml')."
        },
        "frequency": {
          "type": "string",
          "description": "Frequency of the reminder (e.g., 'Once a day', 'Twice a day')."
        },
        "reminderTime": {
          "type": "string",
          "description": "Time of day to send the reminder.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "medicineName",
        "dosage",
        "frequency",
        "reminderTime"
      ]
    },
    "Doctor": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Doctor",
      "type": "object",
      "description": "Represents a doctor available in the HealthNest application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the doctor."
        },
        "name": {
          "type": "string",
          "description": "Full name of the doctor."
        },
        "specialty": {
          "type": "string",
          "description": "Medical specialty of the doctor."
        },
        "location": {
          "type": "string",
          "description": "Location of the doctor's practice (e.g., address)."
        },
        "contactNumber": {
          "type": "string",
          "description": "Contact phone number of the doctor's practice."
        }
      },
      "required": [
        "id",
        "name",
        "specialty",
        "location",
        "contactNumber"
      ]
    },
    "UserDoctorPreference": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserDoctorPreference",
      "type": "object",
      "description": "Represents a user's preferred doctor. Allows users to save doctors for future reference.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user's doctor preference."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who has this doctor preference. (Relationship: User 1:N UserDoctorPreference)"
        },
        "doctorId": {
          "type": "string",
          "description": "Reference to the Doctor the user prefers. (Relationship: Doctor 1:N UserDoctorPreference)"
        }
      },
      "required": [
        "id",
        "userId",
        "doctorId"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.  Documents in this collection are created and managed by Firebase Authentication.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user, matching the Firebase Authentication UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/medicalRecords/{medicalRecordId}",
        "definition": {
          "entityName": "MedicalRecord",
          "schema": {
            "$ref": "#/backend/entities/MedicalRecord"
          },
          "description": "Stores medical records associated with a specific user. Path-based ownership ensures only the user can access their records.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user who owns the medical record."
            },
            {
              "name": "medicalRecordId",
              "description": "The unique identifier of the medical record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/medicineReminders/{reminderId}",
        "definition": {
          "entityName": "MedicineReminder",
          "schema": {
            "$ref": "#/backend/entities/MedicineReminder"
          },
          "description": "Stores medicine reminders for a specific user. Path-based ownership ensures only the user can access their reminders.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user who set the reminder."
            },
            {
              "name": "reminderId",
              "description": "The unique identifier of the medicine reminder."
            }
          ]
        }
      },
      {
        "path": "/doctors/{doctorId}",
        "definition": {
          "entityName": "Doctor",
          "schema": {
            "$ref": "#/backend/entities/Doctor"
          },
          "description": "Stores information about doctors. This collection is publicly accessible.",
          "params": [
            {
              "name": "doctorId",
              "description": "The unique identifier of the doctor."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/doctorPreferences/{preferenceId}",
        "definition": {
          "entityName": "UserDoctorPreference",
          "schema": {
            "$ref": "#/backend/entities/UserDoctorPreference"
          },
          "description": "Stores user's preferred doctors. Path-based ownership ensures only the user can access their preferences.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user who owns the preference."
            },
            {
              "name": "preferenceId",
              "description": "The unique identifier of the user's doctor preference."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to securely manage user data, medical records, medicine reminders, doctor information, and user preferences.  It leverages path-based ownership for user-specific data (medical records, medicine reminders, doctor preferences) to ensure data privacy and simplifies security rules. \n\n*Authorization Independence:*  Path-based ownership (`/users/{userId}/...`) is used for data directly associated with a user.  Since all documents under a user's path are implicitly owned by that user, authorization checks are straightforward and don't require `get()` calls to parent documents. This enables atomic operations and simplifies debugging.\n\n*QAPs Support:* The path-based structure inherently supports secure `list` operations. Rules can easily restrict access to documents within a user's path to only that user.  The separation of `doctors` collection from user-specific collections ensures that listing doctors doesn't expose user-specific data.\n\n*DBAC compliance*: The structure is fully compliant with DBAC since roles are not used. Access is granted solely based on `request.auth.uid` matching the `userId` in the path."
  }
}